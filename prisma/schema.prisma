
// prisma/schema.prisma

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  address   String?
  phone     String?
  role      String   @default("user") // "user" or "admin"
  orders    Order[]
  cart      Cart?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id          Int        @id @default(autoincrement())
  name        String
  description String
  price       Float
  imageUrl    String?
  stock       Int        @default(0)
  orderItems  OrderItem[]
  cartItems   CartItem[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Order {
  id        Int       @id @default(autoincrement())
  userId    Int?
  guestId   String?
  total     Float
  status    String    @default("pending") // e.g., "pending", "shipped", "delivered", "canceled"
  user      User?     @relation(fields: [userId], references: [id])
  items     OrderItem[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  price     Float
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

model Cart {
  id        Int        @id @default(autoincrement())
  userId    Int?       @unique
  guestId   String?    @unique
  user      User?      @relation(fields: [userId], references: [id])
  items     CartItem[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model CartItem {
  id        Int     @id @default(autoincrement())
  cartId    Int
  productId Int
  quantity  Int
  cart      Cart    @relation(fields: [cartId], references: [id])
  product   Product @relation(fields: [productId], references: [id])

  @@unique([cartId, productId])
}
