
// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  name         String?
  phone        String?  @unique
  address      String?
  password     String
  role         String   @default("user") // "user" or "admin"
  refreshToken String?  @unique
  cart         Cart?
  orders       Order[]
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  price       Float
  stock       Int
  image       String?
  cartItems   CartItem[]
  orderItems  OrderItem[]
}

model Cart {
  id      Int       @id @default(autoincrement())
  user    User?     @relation(fields: [userId], references: [id])
  userId  Int?      @unique
  guestId String?   @unique
  items   CartItem[]
}

model CartItem {
  id        Int      @id @default(autoincrement())
  cart      Cart     @relation(fields: [cartId], references: [id])
  cartId    Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int

  @@unique([cartId, productId])
}

enum OrderStatus {
  processing
  delivered
  completed
}

model Order {
  id              Int      @id @default(autoincrement())
  user            User     @relation(fields: [userId], references: [id])
  userId          Int
  createdAt       DateTime @default(now())
  total           Float
  shippingAddress String
  phone           String
  paymentMethod   String
  shippingMethod  String
  status          OrderStatus @default(processing)

  items OrderItem[]
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
  price     Float
}
